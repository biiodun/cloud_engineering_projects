# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
commands: # a reusable command with parameters
  greeting:
    parameters:
      to:
        default: "world"
        type: string
    steps:
      - run: echo "Hello <<parameters.to>>"
jobs:
  my-job:
    docker:
      - image: cimg/base:stable
        
    steps:
      - greeting:
          to: "My-Name"
workflows:
  my-workflow:
    jobs:
      - my-job
#declaration of commands practice
# commands:
#   greetings:
#     parameters:
#       username:
#         default: "user"
#         type: string
#     steps:
#       - run: echo "You are welcome, <<parameters.username>>"

# jobs:
#   greet_user:
#     docker:
#       - image: cimg/base:stable
#     steps:
#       - greetings:
#           to: "Elon Musk"

# workflows:
#   welcome:
#     jobs:
#       - greet_user
      
  # print_hello:
  #   # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
  #   # See: https://circleci.com/docs/configuration-reference/#executor-job
  #   docker:
  #     - image: circleci/node:13.8.0
  #   # - image: cimg/base:stable
  #   # Add steps to the job
  #   # See: https://circleci.com/docs/configuration-reference/#steps
  #   steps:
  #   #  - checkout
  #     - run:
  #         name: "Say hello"
  #         command: "echo Hello, World!"
  # print_name:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - run:
  #         name: "print name"
  #         command: echo $myvar is a student of $school
  #         environment:
  #           myvar: Biodun
  #           school: LBS

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows

      
